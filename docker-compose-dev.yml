version: "3.8"

services:
  frontend_client:
    container_name: frontend_client
    build:
      context: ./client
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - "3001:3000"
    stdin_open: true
    tty: true
    volumes:
      - "./client:/app"
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING= true
      - "CI= true"
  graphql_api:
    container_name: graphql_api
    build:
      context: ./server
      dockerfile: dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    depends_on:
      - mongo-setup_uniuyo
    restart: always
    ports:
      - 8000:8000
    environment:
      replicaSetOne: mongo_DB1:27017
      replicaSetTwo: mongo_DB2:27018
      replicaSetThree: mongo_DB3:27019
      DB_HOST: mongo ## same as the database service name
      DB_PORT: 27017
      DB_USER: uniuyo
      DB_DATABASE: hostelDBProduction
      DB_PASSWORD: blazing147server
      REDIS_URL: redis://redis_cache
      NODE_ENV: development
      REDIS_HOST: redis_cache
      REDIS_PORT: 6379
      SMS_API: https://www.bulksmsnigeria.com/api/v1/sms/create
      SMS_Token: KXZT7nxbjkYZruyJJ4jUVa9urbVPNqj3stgBOgGmjufPNfuDyDdLIpr9uhT9
      REMITA_PUBLIC_KEY: QzAwMDAyNDEyMDJ8NTE5NjY0MjF8NDI4NDgxOGI1NWMyNjYyMTk1OGIxM2QzYTEyMjU3MDVhMTcyMDc0ZTMxNTljMDY4NTM0NTljMmFlY2RlYWM3NTkyMTI2N2Q5NTMwOTFkZmFkOTYzZDk3YzhkNTU2ODc4OGM2MDAxZTQ5ZDFiODNkZGM1NGI4NzU2OWFiYWFkNDQ=
      REMITA_SECRET_KEY: 34632297d15074622d575a3be181ac3185ff816ac753d4c476a6f2a30b73bd527b7b69e4d0300f89472529f49f474ccb129a19849306dd8c256e440c25b78e63
      MerchantId: 2547916
      Api_Key: 1946
      ServiceTypeId: 4430731
      Gateway: https://remitademo.net/remita/exapp/api/v1/send/api/echannelsvc/merchant/api/paymentinit
      CheckStatusUrl: https://remitademo.net/remita/ecomm
      ReturnRemitaUrl: http://localhost:3001/confirm_transaction
      RRRGateWayPaymentUrl: https://remitademo.net/remita/ecomm/finalize.reg
      JusibePublicKey: 425f0a0373eb462bb90fb1ce5bf99796
      JusibeAccessToken: 22c26cb42ca32a6cb80a08616e99362b
      EBulkSMSAPIKey: d4b76664b41984137091f955aa010812c5c30f03
      EBulkSMSUsername: jamiebones2000@yahoo.co.uk
      EBulkSMSGateWay: https://api.ebulksms.com:4433
      CheapGlobalSmsGateway: http://cheapglobalsms.com/api_v1
      CheapGlobalSmsSubAccount: 9540_uniuyo
      CheapGlobalSmsSubAccountPassword: blazing147
      DeveloperBugsEmailSupport: bugsreport2021@gmail.com
      DeveloperBugsEmailPassword: blazing147
      
  mongo-setup_uniuyo:
    container_name: mongo-setup_uniuyo
    image: mongo
    restart: on-failure
    networks:
      default:
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/setup.sh"] # Make sure this file exists (see below for the setup.sh)
    depends_on:
      - mongo_DB1
      - mongo_DB2
      - mongo_DB3

  mongo_DB1:
    hostname: mongo_DB1
    container_name: mongo_DB1
    image: mongo
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data1/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data1/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key
      - ./scripts/createAdmin.sh:/scripts/createAdmin.sh

  mongo_DB2:
    hostname: mongo_DB2
    container_name: mongo_DB2
    image: mongo
    expose:
      - 27017
    ports:
      - 27018:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data2/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data2/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key

  mongo_DB3:
    hostname: mongo_DB3
    container_name: mongo_DB3
    image: mongo
    expose:
      - 27017
    ports:
      - 27019:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data3/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data3/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key

  mongo-express:
    image: mongo-express
    container_name: mongo-express_uniuyo
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo_DB1
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_DB1,mongo_DB2,mmongo_DB3
      ME_CONFIG_MONGODB_ADMINUSERNAME: jamiebones
      ME_CONFIG_MONGODB_ADMINPASSWORD: blazing147
      ME_CONFIG_BASICAUTH_USERNAME: jamiebones
      ME_CONFIG_BASICAUTH_PASSWORD: blazing147

  redis:
    image: redis
    container_name: redis_cache
    restart: always
    # working_dir: /usr/local
    command: bash -c "redis-server --appendonly yes"
    ports:
      - 6890:6379
    volumes:
      - $HOME/hostel_data/redis_data:/data
      # - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
