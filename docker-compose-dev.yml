services:
  frontend_client:
    container_name: frontend_client
    build:
      context: ./client
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - "3001:3000"
    stdin_open: true
    tty: true
    volumes:
      - "./client:/app"
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING= true
      - "CI= true"

  graphql_api:
    container_name: graphql_api
    build:
      context: ./server
      dockerfile: dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    depends_on:
      - setup
    restart: always
    ports:
      - 8000:8000
    environment:
      Replica_Set_One: mongo1:27017
      Replica_Set_Two: mongo2:27017
      Replica_Set_Three: mongo3:27017
      DB_HOST: mongo1 ## same as the database service name
      DB_PORT: 27017
      DB_USER: uniuyo
      DB_DATABASE: hostelDBProduction
      DB_PASSWORD: "blazing147_DB"
      REDIS_URL: redis://redis_cache:6379
      NODE_ENV: development
      REDIS_HOST: redis_cache
      REDIS_PORT: 6379
      SMS_API: https://www.bulksmsnigeria.com/api/v1/sms/create
      SMS_Token: ""
      REMITA_PUBLIC_KEY: ""
      REMITA_SECRET_KEY: ""
      MerchantId: ""
      Api_Key: ""
      ServiceTypeId: ""
      Gateway: https://remitademo.net/remita/exapp/api/v1/send/api/echannelsvc/merchant/api/paymentinit
      CheckStatusUrl: https://remitademo.net/remita/ecomm
      ReturnRemitaUrl: http://localhost:3001/confirm_transaction
      RRRGateWayPaymentUrl: https://remitademo.net/remita/ecomm/finalize.reg
      EBulkSMSAPIKey: "testapikey"
      EBulkSMSUsername: jamiebones2000@yahoo.co.uk
      EBulkSMSGateWay: https://api.ebulksms.com:4433
      CheapGlobalSmsGateway: http://cheapglobalsms.com/api_v1
      CheapGlobalSmsSubAccount: "testapikey"
      CheapGlobalSmsSubAccountPassword: "testapikey"
      DeveloperBugsEmailSupport: bugsreport2021@gmail.com
      DeveloperBugsEmailPassword: "testapikey"

  mongo1:
    image: mongo:5.0
    container_name: mongo1
    ports:
      - "27017:27017"
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo1_data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongo2:
    image: mongo:5.0
    container_name: mongo2
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo2_data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongo3:
    image: mongo:5.0
    container_name: mongo3
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo3_data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]

  setup:
    image: mongo:5.0
    container_name: setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./scripts:/scripts
    entrypoint: ["bash", "/scripts/setup.sh"]
 
  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-express_uniuyo
  #   restart: always
  #   ports:
  #     - 9080:8085
  #   depends_on:
  #     - mongo1
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER: mongo1,mongo2,mongo3
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: jamiebones
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: blazing147
  #     ME_CONFIG_BASICAUTH_USERNAME: jamiebones
  #     ME_CONFIG_BASICAUTH_PASSWORD: blazing147
      
  redis:
    image: redis
    container_name: redis_cache
    restart: always
    # working_dir: /usr/local
    command: bash -c "redis-server --appendonly yes"
    ports:
      - 6900:6379
    volumes:
      - redis_data:/data
  
volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  redis_data:

