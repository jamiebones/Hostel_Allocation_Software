version: "3.8"

services:
  frontend_client:
    container_name: frontend_client
    build:
      context: ./client
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - "3001:3000"
    stdin_open: true
    tty: true
    volumes:
      - "./client:/app"
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING= true
      - "CI= true"
  graphql_api:
    container_name: graphql_api
    build:
      context: ./server
      dockerfile: dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    depends_on:
      - mongo-setup_uniuyo
    restart: always
    ports:
      - 8000:8000
    environment:
      Replica_Set_One: mongo_db1:27017
      Replica_Set_Two: mongo_db2:27018
      Replica_Set_Three: mongo_db3:27019
      DB_HOST: mongo ## same as the database service name
      DB_PORT: 27017
      DB_USER: uniuyo
      DB_DATABASE: hostelDBProduction
      DB_PASSWORD: blazing147server
      REDIS_URL: redis://redis_cache
      NODE_ENV: development
      REDIS_HOST: redis_cache
      REDIS_PORT: 6379
      SMS_API: https://www.bulksmsnigeria.com/api/v1/sms/create
      SMS_Token:
      REMITA_PUBLIC_KEY:
      REMITA_SECRET_KEY:
      MerchantId: 2547916
      Api_Key: 1946
      ServiceTypeId: 4430731
      Gateway: https://remitademo.net/remita/exapp/api/vmentinit
      CheckStatusUrl: https://remitademo.net/remita/ecomm
      ReturnRemitaUrl: http://localhost:3001/confirm_transaction
      RRRGateWayPaymentUrl: https://remitademo.net/remita/ecomm/finalize.reg
      JusibePublicKey:
      JusibeAccessToken:
      EBulkSMSAPIKey:
      EBulkSMSUsername: jamiebones2000@yahoo.co.uk
      EBulkSMSGateWay: https://api.ebulksms.com:4433
      CheapGlobalSmsGateway: http://cheapglobalsms.com/api_v1
      CheapGlobalSmsSubAccount: 9540_uniuyo
      CheapGlobalSmsSubAccountPassword: blazing147
      DeveloperBugsEmailSupport: bugsreport2021@gmail.com
      DeveloperBugsEmailPassword:

  mongo-setup_uniuyo:
    container_name: mongo-setup_uniuyo
    image: mongo
    restart: on-failure
    networks:
      default:
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/setup.sh"] # Make sure this file exists (see below for the setup.sh)
    depends_on:
      - mongo_db1
      - mongo_db2
      - mongo_db3

  mongo_db1:
    hostname: mongo_db1
    container_name: mongo_db1
    image: mongo
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data1/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data1/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key
      - ./scripts/createAdmin.sh:/scripts/createAdmin.sh

  mongo_db2:
    hostname: mongo_db2
    container_name: mongo_db2
    image: mongo
    expose:
      - 27017
    ports:
      - 27018:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data2/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data2/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key

  mongo_db3:
    hostname: mongo_db3
    container_name: mongo_db3
    image: mongo
    expose:
      - 27017
    ports:
      - 27019:27017
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "false",
      ]
    volumes:
      - $HOME/hostel_data/data3/db:/data/db # This is where your volume will persist. e.g. VOLUME-DIR = ./volumes/mongodb
      - $HOME/hostel_data/data3/configdb:/data/configdb
      #- $HOME/keys/file.key:/data/file.key

  mongo-express:
    image: mongo-express
    container_name: mongo-express_uniuyo
    restart: always
    ports:
      - 8085:8085
    depends_on:
      - mongo_db1
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_db1,mongo_db2,mongo_db3
      ME_CONFIG_MONGODB_ADMINUSERNAME: jamiebones
      ME_CONFIG_MONGODB_ADMINPASSWORD: blazing147
      ME_CONFIG_BASICAUTH_USERNAME: jamiebones
      ME_CONFIG_BASICAUTH_PASSWORD: blazing147

  mongo_backup:
    image: stefanprodan/mgob:1.1
    ports:
      - 8090:8090
    volumes:
      - $HOME/mongo_backup_dev/config:/config
      - $HOME/mongo_backup_dev/storage:/storage
      - $HOME/mongo_backup_dev/data:/data
      - $HOME/mongo_backup_dev/tmp:/tmp
    environment:
      LogLevel: info


  redis:
    image: redis
    container_name: redis_cache
    restart: always
    # working_dir: /usr/local
    command: bash -c "redis-server --appendonly yes"
    ports:
      - 6890:6379
    volumes:
      - $HOME/hostel_data/redis_data:/data
      # - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
